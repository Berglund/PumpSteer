input_number:
  pumpsteer_aggressiveness:
    name: VirtualOutdoorTemp Aggressiveness
    min: 0
    max: 5
    step: 1
    unit_of_measurement: "level"
    icon: mdi:lightning-bolt-circle

  pumpsteer_summer_threshold: # TYPO KORRIGERAD HÄR
    name: Summer Mode Threshold
    min: 0
    max: 30
    step: 0.5
    unit_of_measurement: "°C"
    mode: box

  indoor_target_temperature:
    name: Indoor Target Temperature
    min: 0
    max: 27
    step: 0.5
    unit_of_measurement: "°C"
    icon: mdi:thermometer

  house_inertia:
    name: House Inertia
    min: 0.1
    max: 10.0
    step: 0.1
    mode: box
    unit_of_measurement: "faktor"
    icon: mdi:home-thermometer

input_text:
  hourly_forecast_temperatures:
    name: Hourly Forecast Temperatures
    max: 255

template:
  - sensor:
      - name: "Real Outdoor Temperature"
        state: >
          {{ state_attr('sensor.pumpsteer', 'Ute (verklig)') }}
        unit_of_measurement: "°C"
        device_class: temperature

      - name: "VirtualOutdoorTemp Tempdiff"
        state: >
          {% set fake = states('sensor.pumpsteer') | float %}
          {% set real = state_attr('sensor.pumpsteer', 'Ute (verklig)') | float %}
          {{ (fake - real) | round(1) }}
        unit_of_measurement: "°C"
        icon: mdi:thermometer-minus

      - name: "VirtualOutdoorTemp Indoor Target Diff"
        state: >
          {% set actual = state_attr('sensor.pumpsteer', 'Inne (verklig)') | float %}
          {% set target = state_attr('sensor.pumpsteer', 'Inne (mål)') | float %}
          {{ (actual - target) | round(1) }}
        unit_of_measurement: "°C"
        icon: mdi:home-thermometer-outline

      - name: "PumpSteer Operating Mode"
        state: >
          {{ state_attr('sensor.pumpsteer', 'Läge') | title }}
        icon: >
          {% set mode = state_attr('sensor.pumpsteer', 'Läge') %}
          {% if mode == 'preboost' %}
            mdi:flash
          {% elif mode == 'balance' %}
            mdi:swap-vertical
          {% elif mode == 'neutral' %}
            mdi:pause-circle
          {% elif mode == 'summer_mode' %}
            mdi:weather-sunny
          {% else %}
            mdi:help-circle
          {% endif %}
##
## This is the automation i use for pre-boost.
##
##
# alias: Uppdatera Timvis Temperatur i Text
# description: ""
# triggers:
#   - minutes: /30
#     trigger: time_pattern
#   - event: start
#     trigger: homeassistant
#   - event_type: event_template_reloaded
#     trigger: event
# actions:
#   - alias: Hämta timvis väderprognos
#     target:
#       entity_id: weather.openweathermap
#     data:
#       type: hourly
#     response_variable: forecast_result
#     action: weather.get_forecasts
#   - alias: Skapa temperatursträng
#     variables:
#       hourly_forecast: "{{ forecast_result['weather.openweathermap'].forecast }}"
#       temperature_string: |-
#         {{
#           hourly_forecast[:24] | map(attribute='temperature') | join(', '). # Change this [?]for how many hours to get temperature forcast
#         }}
#   - alias: Spara till input_text
#     target:
#       entity_id: input_text.hourly_forecast_temperatures
#     data:
#       value: "{{ temperature_string }}"
