input_number:
  pumpsteer_aggressiveness:
    name: PumpSteer Aggressiveness
    min: 0
    max: 5
    step: 1
    unit_of_measurement: "level"
    icon: mdi:lightning-bolt-circle
    mode: box

  pumpsteer_summer_threshold:
    name: Summer Mode Threshold
    min: 0
    max: 30
    step: 0.5
    unit_of_measurement: "°C"
    mode: box

  indoor_target_temperature:
    name: Indoor Target Temperature
    min: 0
    max: 27
    step: 0.5
    unit_of_measurement: "°C"
    icon: mdi:thermometer
    mode: box

  house_inertia:
    name: House Inertia
    min: 0.1
    max: 10.0
    step: 0.1
    # unit_of_measurement: "x"  # eller ta bort om du föredrar helt utan
    icon: mdi:home-thermometer
    mode: box

input_text:
  hourly_forecast_temperatures:
    name: Hourly Forecast Temperatures
    max: 255

input_boolean:
  holiday_mode:
    name: Semestermode aktivt
    icon: mdi:beach

input_datetime:
  holiday_start:
    name: Semester börjar
    has_date: true
    has_time: true

  holiday_end:
    name: Semester slutar
    has_date: true
    has_time: true

# template:
#   - sensor:
#       # Temperatur & inomhuslogik
#       - name: "Real Outdoor Temperature"
#         state: >
#           {{ state_attr('sensor.pumpsteer', 'Outdoor (actual)') }}
#         unit_of_measurement: "°C"
#         device_class: temperature

#       - name: "VirtualOutdoorTemp Tempdiff"
#         state: >
#           {% set fake = states('sensor.pumpsteer') | float(0) %}
#           {% set real = state_attr('sensor.pumpsteer', 'Outdoor (actual)') | float(0) %}
#           {{ (fake - real) | round(1) }}
#         unit_of_measurement: "°C"
#         icon: mdi:thermometer-minus

#       - name: "PumpSteer Indoor Target Diff"
#         state: >
#           {% set actual = state_attr('sensor.pumpsteer', 'Indoor (actual)') | float(0) %}
#           {% set target = state_attr('sensor.pumpsteer', 'Indoor (target)') | float(0) %}
#           {{ (actual - target) | round(1) }}
#         unit_of_measurement: "°C"
#         icon: mdi:home-thermometer-outline

#       - name: "PumpSteer Operating Mode"
#         state: >
#           {{ state_attr('sensor.pumpsteer', 'Mode') | title }}
#         icon: >
#           {% set mode = state_attr('sensor.pumpsteer', 'Mode') %}
#           {% if mode == 'preboost' %}
#             mdi:flash
#           {% elif mode == 'heating' %}
#             mdi:fire
#           {% elif mode == 'neutral' %}
#             mdi:pause-circle
#           {% elif mode == 'summer_mode' %}
#             mdi:weather-sunny
#           {% elif mode == 'braking_mode' or mode == 'braking_by_temp' %}
#             mdi:car-brake-alert
#           {% else %}
#             mdi:help-circle
#           {% endif %}

#       # Dessa sensorer läser attribut från 'sensor.pumpsteer' (huvudsensorn)
#       - name: "PumpSteer Inertia"
#         # Läser 'Inertia' från huvudsensorn
#         state: "{{ state_attr('sensor.pumpsteer', 'Inertia') | default(0) }}"
#         icon: mdi:speedometer
#         state_class: measurement

#       - name: "PumpSteer Aggressiveness"
#         # Läser 'Aggressiveness' från huvudsensorn
#         state: "{{ state_attr('sensor.pumpsteer', 'Aggressiveness') | default(0) }}"
#         icon: mdi:target
#         state_class: measurement

#       # Dessa sensorer läser attribut från 'sensor.pumpsteer_future_strategy'
#       - name: "PumpSteer Preboost Expected"
#         unit_of_measurement: "hours"
#         state: "{{ state_attr('sensor.pumpsteer_future_strategy', 'preboost_expected_in_hours') }}"
#         icon: mdi:timer-outline
#         state_class: measurement

#       - name: "PumpSteer Cold Expensive Hours Next 6h"
#         unit_of_measurement: "hours"
#         state: "{{ state_attr('sensor.pumpsteer_future_strategy', 'cold_and_expensive_hours_next_6h') }}"
#         icon: mdi:thermometer-minus
#         state_class: measurement

#       - name: "PumpSteer Expensive Hours Next 6h"
#         unit_of_measurement: "hours"
#         state: "{{ state_attr('sensor.pumpsteer_future_strategy', 'expensive_hours_next_6h') }}"
#         icon: mdi:cash-multiple
#         state_class: measurement

#       - name: "PumpSteer Braking Price Threshold"
#         unit_of_measurement: "%"
#         state: "{{ state_attr('sensor.pumpsteer_future_strategy', 'braking_price_threshold_percent') }}"
#         icon: mdi:line-scan
#         state_class: measurement

#       - name: "PumpSteer Strategy Status"
#         state: "{{ state_attr('sensor.pumpsteer_future_strategy', 'strategy_status') }}"
#         icon: mdi:check-circle-outline
