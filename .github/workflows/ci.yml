name: CI & Release

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'custom_components/**'
      - 'manifest.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'custom_components/**'
      - 'manifest.json'
  schedule:
    - cron: '0 6 * * 1'
  release:
    types: [ published ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  validate:
    name: Hassfest & Lint
    # Kör inte denna på release-event (det sköts av release-jobbet)
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Hassfest
        uses: home-assistant/actions/hassfest@master

      - name: Lint with flake8 (E501 ignored)
        run: |
          python3 -m pip install --upgrade pip
          pip install flake8
          flake8 custom_components/pumpsteer --ignore=E501

      - name: Comment on PR if failed
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Validation failed (Hassfest/Lint). Please check the logs and fix the issues.'
            })

  release:
    name: Validate, Build & Attach to Release
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate with Hassfest
        uses: home-assistant/actions/hassfest@master

      - name: Lint with flake8 (E501 ignored)
        run: |
          python3 -m pip install --upgrade pip
          pip install flake8
          flake8 custom_components/pumpsteer --ignore=E501

      - name: Update version in manifest.json
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" custom_components/pumpsteer/manifest.json

      - name: Create ZIP for release
        run: |
          cd custom_components
          zip -r ../pumpsteer.zip pumpsteer/

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./pumpsteer.zip
          asset_name: pumpsteer.zip
          asset_content_type: application/zip

      - name: Clean up
        run: rm -f pumpsteer.zip
